openapi: 3.0.1
info:
  title: "E-commerce with Java 17 and Spring Boot 3.2.3"
  description: "Esta aplicação é um sistema de e-commerce que permite aos usuários visualizarem, pesquisarem e comprarem produtos disponíveis."
  termsOfService: "https://pub.example.com.br/e-commmerce"
  license:
    name: "Apache 2.0"
    url: "https://pub.example.com.br/e-commmerce"
  version: "v1"

servers:
  - url: http://localhost:8080
    description: Generated server url

paths:
  /users:
    get:
      tags:
        - User
      summary: Finds all users
      description: Finds all users
      operationId: findAll
      responses:
        '200':
          description: OK
          content:
            JSON:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Error

    post:
      tags:
        - User
      summary: Add a new person
      description: Add a new person by passing in a JSOn representation of the person!
      operationId: insert
      requestBody:
        content:
          JSON:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Created
          content:
            JSON:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Error

  /users/{id}:
    put:
      tags:
        - User
      summary: Update a person
      description: Updates a person by id!
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          JSON:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            JSON:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Error

    get:
      tags:
        - User
      summary: Find a person
      description: Find a person
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            JSON:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Error

    delete:
      tags:
        - User
      summary: Delete a person
      description: Delete a person
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK

  /products:
    get:
      tags:
        - product
      summary: Finds all products
      description: Finds all products
      operationId: findAll_1
      responses:
        '200':
          description: OK
          content:
            JSON:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Error

  /products/{id}:
    get:
      tags:
        - product
      summary: Find a product
      description: Find a product
      operationId: findById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            JSON:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Error

  /orders:
    get:
      tags:
        - order
      summary: Finds all orders
      description: Finds all orders
      operationId: findAll_2
      responses:
        '200':
          description: OK
          content:
            JSON:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Error

  /orders/{id}:
    get:
      tags:
        - order
      summary: Find a order by id
      description: Find a order by id
      operationId: findById_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            JSON:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Error

  /categories:
    get:
      tags:
        - category
      summary: Finds all categories
      description: Finds all categories
      operationId: findAll_3
      responses:
        '200':
          description: OK
          content:
            JSON:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Error

  /categories/{id}:
    get:
      tags:
        - category
      summary: Find a category by id
      description: Find a category by id
      operationId: findById_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            JSON:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string

    Category:
      type: object
      properties:
        ide:
          type: integer
          format: int64
        name:
          type: string

    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        imgUrl:
          type: string
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'

    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        moment:
          type: string
          format: date-time
        orderStatus:
          type: string
          enum:
            - WAITING_PAYMENT
            - PAID
            - SHIPPED
            - DELIVERED
            - CANCELED
        client:
          $ref: '#/components/schemas/User'
        items:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        payment:
          $ref: '#/components/schemas/Payment'
        total:
          type: number
          format: double

    OrderItem:
      type: object
      properties:
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
        product:
          $ref: '#/components/schemas/Product'
        subTotal:
          type: number
          format: double

    Payment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        moment:
          type: string
          format: date-time